--- contacts-1.0.13/lib/contacts/hotmail.rb	2008-03-21 13:46:08.000000000 -0700
+++ contacts-1.0.13.mod/lib/contacts/hotmail.rb	2008-12-18 16:11:37.000000000 -0800
@@ -3,6 +3,7 @@
     URL                 = "http://login.live.com/login.srf?id=2"
     OLD_CONTACT_LIST_URL = "http://%s/cgi-bin/addresses"
     NEW_CONTACT_LIST_URL = "http://%s/mail/GetContacts.aspx"
+    NEWEST_CONTACT_LIST_URL = "http://%s/mail/options.aspx?subsection=26"
     COMPOSE_URL         = "http://%s/cgi-bin/compose?"
     PROTOCOL_ERROR      = "Hotmail has changed its protocols, please upgrade this library first. If that does not work, report this error at http://rubyforge.org/forum/?group_id=2693"
     PWDPAD = "IfYouAreReadingThisYouHaveTooMuchFreeTime"
@@ -60,10 +61,32 @@
       end
 =end
       
-      data, resp, cookies, forward, old_url = get("http://mail.live.com/mail", cookies)
-      data, resp, cookies, forward, old_url = get(forward, cookies)
-      
-      @domain = URI.parse(forward).host
+      data, resp, cookies, forward = get("http://mail.live.com/mail", cookies)
+      until forward.nil?
+        data, resp, cookies, forward, old_url = get(forward, cookies, old_url) + [forward]
+      end
+
+    # click on 'Contiune' if presented with the Hotmail Listened page
+    #  look for the Submit button with a "TakeMeToInbox" name (this should work for other languages)
+    if (not old_url.grep(/MessageAtLogin.aspx/).first.nil?)
+		
+      viewState = data.split(/>\s*?</).grep(/__VIEWSTATE/).first[/value=\".+?\"/][7..-2]
+      eventValidation = data.split(/>\s*?</).grep(/__EVENTVALIDATION/).first[/value=\".+?\"/][7..-2]
+      continueValue = data.split(/>\s*?</).grep(/TakeMeToInbox/).first[/value=\".+?\"/][7..-2]
+
+      # post back to the same url 
+      postdata = "%s=%s&%s=%s&%s=%s" % [
+            "__VIEWSTATE", CGI.escape(viewState),
+            "__EVENTVALIDATION", CGI.escape(eventValidation),
+            CGI.escape("TakeMeToInbox"), CGI.escape(continueValue)
+        ]
+        data, resp, cookies, forward = post( old_url, postdata, cookies, old_url )
+        until forward.nil?
+          data, resp, cookies, forward, old_url = get(forward, cookies, old_url) + [forward]
+        end
+      end
+            
+      @domain = URI.parse(old_url).host
       @cookies = cookies
     rescue AuthenticationError => m
       if @attempt == 1
@@ -73,10 +96,51 @@
       end
     end
     
+    def contacts(options = {})
+      return @contacts if @contacts
+      if connected?
+        url = URI.parse(contact_list_url)
+        data, resp, cookies, forward = get( contact_list_url, @cookies )
+        
+        if resp.code_type != Net::HTTPOK
+          raise ConnectionError, self.class.const_get(:PROTOCOL_ERROR)
+        end
+
+        # we have to click on the Export Contacts button to get the csv:
+        # Search the content for __VIEWSTATE or __EVENTVALIDATION
+        viewState = data.split(/>\s*?</).grep(/__VIEWSTATE/).first[/value=\".+?\"/][7..-2]
+        eventValidation = data.split(/>\s*?</).grep(/__EVENTVALIDATION/).first[/value=\".+?\"/][7..-2]
+        exportValue = data.split(/>\s*?</).grep(/ctl02\$ExportButton/).first[/value=\".+?\"/][7..-2]
+        mt = cookies.split("; ").grep(/mt=/).first[3..-1]
+        
+        # post back to the same url 
+        postdata = "%s=%s&%s=%s&%s=%s&%s=%s" % [
+          "__VIEWSTATE", CGI.escape(viewState),
+          "__EVENTVALIDATION", CGI.escape(eventValidation),
+          CGI.escape("ctl02$ExportButton"), CGI.escape(exportValue),
+          "mt", CGI.escape( mt )
+        ]
+	
+        url = URI.parse(contact_list_url)
+        http = open_http(url)
+        resp, data = http.post("#{url.path}?#{url.query}", postdata,
+          "User-Agent" => "Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en-US; rv:1.8.1) Gecko/20061010 Firefox/2.0",
+          "Accept-Encoding" => "gzip",
+          "Cookie" => cookies,
+          "Referer" => contact_list_url,
+          "Content-Type" => 'application/x-www-form-urlencoded'
+        )
+
+        data = uncompress(resp, data)
+        parse(data, options)
+      end
+    end
+
+
   private
     
     def contact_list_url
-      NEW_CONTACT_LIST_URL % @domain
+      NEWEST_CONTACT_LIST_URL % @domain
     end
     
     def follow_email(data, id, contacts_slot)
@@ -100,7 +164,7 @@
 
     def parse(data, options={})
       data = data.split("\r\n")
-      data = CSV.parse(data.join("\r\n").gsub('"', ''), ';')
+      data = CSV.parse(data.join("\r\n").gsub('"', '').gsub(';', ','), ';')
       col_names = data.shift
 
       @contacts = data.delete_if{|person|person[0].nil?}.map do |person|
@@ -109,7 +173,6 @@
         [[person[1], person[2], person[3]].delete_if{|i|i.empty?}.join(" "), person[idx - 1]] unless person[idx - 1].nil?
       end.compact 
     end
-    
   end
 
   TYPES[:hotmail] = Hotmail
